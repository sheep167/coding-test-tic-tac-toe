# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # build:

  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       node-version: [14.x, 16.x, 18.x]
  #       # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'npm'
    
  #   - name: Install dependencies
  #     run: npm install

  #   - name: Run the tests
  #     run: npm test

  #   - name: Build
  #     run: npm run build

  # cypress-run:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
      
  #     - name: Install dependencies
  #       run: npm install
      
  #     - name: Cypress run
  #       uses: cypress-io/github-action@v6
  #       with:
  #         start: npm run start
  #         browser: chrome
  #         wait-on: 'http://localhost:3000'

  #     - uses: actions/upload-artifact@v3
  #       if: failure()
  #       with:
  #         name: cypress-screenshots
  #         path: cypress/screenshots
  #     - uses: actions/upload-artifact@v3
  #       if: always()
  #       with:
  #         name: cypress-videos
  #         path: cypress/videos

  deploy:
    # Add a dependency to the build job
    # needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action